# Generated by Django 3.2.9 on 2021-12-22 10:10

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import multiselectfield.db.fields



class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Consultation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consultationDate', models.DateField()),
                ('consultationCost', models.FloatField(blank=True, null=True)),
                ('consultation_reason', models.CharField(max_length=100)),
                ('allergy', models.CharField(max_length=100)),
                ('previous_history', models.CharField(max_length=200)),
                ('weight', models.FloatField(blank=True, null=True)),
                ('height', models.FloatField(blank=True, null=True)),
                ('temperature', models.FloatField()),
                ('arterialpressure', models.FloatField()),
                ('skin_appearence', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomDepaartement', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Employe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomEmploye', models.TextField()),
                ('PrenomEmploye', models.TextField()),
                ('Poste', models.TextField()),
                ('idDepartement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.departement')),
            ],
        ),
        migrations.CreateModel(
            name='Examen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Time', models.TimeField(auto_now=True)),
                ('Date', models.DateField(auto_now=True)),
                ('ExamDescription', models.CharField(max_length=200)),
                ('ExamCost', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Maladie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('diseaseName', models.CharField(max_length=10)),
                ('description', models.TextField(default=None)),
            ],
        ),
        migrations.CreateModel(
            name='Medicament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Time', models.TimeField(auto_now=True)),
                ('Date', models.DateField(auto_now=True)),
                ('MedicineName', models.CharField(max_length=30)),
                ('MedicineCost', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(blank=True, null=True)),
                ('FirstName', models.CharField(max_length=50)),
                ('LastName', models.CharField(max_length=50)),
                ('sexe', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], default='Male', max_length=50)),
                ('Phone_number', models.CharField(max_length=9)),
                ('BirthDate', models.DateField()),
                ('Address', models.CharField(max_length=25)),
                ('Email_address', models.CharField(max_length=25)),
                ('condition', models.CharField(choices=[('NoCritical', 'NoCritical'), ('Critical', 'Critical')], default='NoCritical', max_length=50)),
                ('Service', models.CharField(choices=[('Dental', 'Dental'), ('General Medicine', 'General Medicine'), ('Opthalmogical', 'Opthalmogical'), ('Pediatric', 'pediatric')], max_length=50, null=True)),
                ('Status', multiselectfield.db.fields.MultiSelectField(choices=[('Married', 'Married'), ('Single', 'Single'), ('Student', 'Student'), ('other', 'other')], max_length=28, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prescriptionNumber', models.IntegerField()),
                ('StartDate', models.DateField()),
                ('EndDate', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Symptome',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('typeSymptome', models.TextField()),
                ('decription', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Visite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomVisiteur', models.TextField()),
                ('date', models.DateField()),
                ('heureArrivee', models.TimeField()),
                ('heureDepart', models.TimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Visiteur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nomVisiteur', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Suivre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idEmploye', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.employe')),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Salle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idDepartement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.departement')),
            ],
        ),
        migrations.CreateModel(
            name='Rendez_vous',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('HeureRendez_vous', models.DateTimeField()),
                ('idEmploye', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.employe')),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.patient')),
            ],
        ),
        migrations.CreateModel(
            name='Recu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('montant', models.IntegerField()),
                ('idPrescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='Prescrire2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idExamen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.examen')),
                ('idPrescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='Prescrire1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idMedicament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.medicament')),
                ('idPrescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='Prescrire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idMedicament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.medicament')),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.patient')),
            ],
        ),
        migrations.AddField(
            model_name='medicament',
            name='idPatient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.patient'),
        ),
        migrations.CreateModel(
            name='LingneRecu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idRecu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.recu')),
            ],
        ),
        migrations.AddField(
            model_name='examen',
            name='idPatient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.patient'),
        ),
        migrations.CreateModel(
            name='Donner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idConsultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.consultation')),
                ('idPrescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='Diagnostiquer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idConsultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.consultation')),
                ('idMaladie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.maladie')),
            ],
        ),
        migrations.CreateModel(
            name='Detecter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idConsultation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.consultation')),
                ('idSymptome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.symptome')),
            ],
        ),
        migrations.AddField(
            model_name='consultation',
            name='idPatient',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.patient'),
        ),
        migrations.CreateModel(
            name='Avoir2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.patient')),
                ('idVisite', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.visite')),
            ],
        ),
        migrations.CreateModel(
            name='Avoir1',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idMaladie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.maladie')),
                ('idPatient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='usermanagement.patient')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('role', models.CharField(choices=[('NoRole', 'NoRole'), ('Doctor', 'Doctor'), ('Patient', 'Patient'), ('Receptionist', 'Receptionist'), ('Admin', 'Admin'), ('Accountant', 'Accountant'), ('Nurse', 'Nurse'), ('Labtech', 'Labtech'), ('HRM', 'HRM'), ('Specialist', 'Specialist'), ('Ophtalmologist', 'Ophtalmologist'), ('Pharmacist', 'Pharmacist'), ('Dentist', 'Dentist')], default='NoRole', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
